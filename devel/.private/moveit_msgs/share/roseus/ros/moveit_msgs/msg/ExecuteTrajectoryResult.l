;; Auto-generated. Do not edit!


(when (boundp 'moveit_msgs::ExecuteTrajectoryResult)
  (if (not (find-package "MOVEIT_MSGS"))
    (make-package "MOVEIT_MSGS"))
  (shadow 'ExecuteTrajectoryResult (find-package "MOVEIT_MSGS")))
(unless (find-package "MOVEIT_MSGS::EXECUTETRAJECTORYRESULT")
  (make-package "MOVEIT_MSGS::EXECUTETRAJECTORYRESULT"))

(in-package "ROS")
;;//! \htmlinclude ExecuteTrajectoryResult.msg.html


(defclass moveit_msgs::ExecuteTrajectoryResult
  :super ros::object
  :slots (_error_code ))

(defmethod moveit_msgs::ExecuteTrajectoryResult
  (:init
   (&key
    ((:error_code __error_code) (instance moveit_msgs::MoveItErrorCodes :init))
    )
   (send-super :init)
   (setq _error_code __error_code)
   self)
  (:error_code
   (&rest __error_code)
   (if (keywordp (car __error_code))
       (send* _error_code __error_code)
     (progn
       (if __error_code (setq _error_code (car __error_code)))
       _error_code)))
  (:serialization-length
   ()
   (+
    ;; moveit_msgs/MoveItErrorCodes _error_code
    (send _error_code :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; moveit_msgs/MoveItErrorCodes _error_code
       (send _error_code :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; moveit_msgs/MoveItErrorCodes _error_code
     (send _error_code :deserialize buf ptr-) (incf ptr- (send _error_code :serialization-length))
   ;;
   self)
  )

(setf (get moveit_msgs::ExecuteTrajectoryResult :md5sum-) "6a39f41e4bc445a437e9a0cabdd5ef5c")
(setf (get moveit_msgs::ExecuteTrajectoryResult :datatype-) "moveit_msgs/ExecuteTrajectoryResult")
(setf (get moveit_msgs::ExecuteTrajectoryResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======

# Error code - encodes the overall reason for failure
MoveItErrorCodes error_code


================================================================================
MSG: moveit_msgs/MoveItErrorCodes
int32 val

# overall behavior
int32 SUCCESS=1
int32 FAILURE=99999

int32 PLANNING_FAILED=-1
int32 INVALID_MOTION_PLAN=-2
int32 MOTION_PLAN_INVALIDATED_BY_ENVIRONMENT_CHANGE=-3
int32 CONTROL_FAILED=-4
int32 UNABLE_TO_AQUIRE_SENSOR_DATA=-5
int32 TIMED_OUT=-6
int32 PREEMPTED=-7

# planning & kinematics request errors
int32 START_STATE_IN_COLLISION=-10
int32 START_STATE_VIOLATES_PATH_CONSTRAINTS=-11
int32 START_STATE_INVALID=-26

int32 GOAL_IN_COLLISION=-12
int32 GOAL_VIOLATES_PATH_CONSTRAINTS=-13
int32 GOAL_CONSTRAINTS_VIOLATED=-14
int32 GOAL_STATE_INVALID=-27
int32 UNRECOGNIZED_GOAL_TYPE=-28

int32 INVALID_GROUP_NAME=-15
int32 INVALID_GOAL_CONSTRAINTS=-16
int32 INVALID_ROBOT_STATE=-17
int32 INVALID_LINK_NAME=-18
int32 INVALID_OBJECT_NAME=-19

# system errors
int32 FRAME_TRANSFORM_FAILURE=-21
int32 COLLISION_CHECKING_UNAVAILABLE=-22
int32 ROBOT_STATE_STALE=-23
int32 SENSOR_INFO_STALE=-24
int32 COMMUNICATION_FAILURE=-25
int32 CRASH=-29
int32 ABORT=-30

# kinematics errors
int32 NO_IK_SOLUTION=-31

")



(provide :moveit_msgs/ExecuteTrajectoryResult "6a39f41e4bc445a437e9a0cabdd5ef5c")


